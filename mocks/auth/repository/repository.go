// Code generated by MockGen. DO NOT EDIT.
// Source: modules/auth/repository/interface.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	models "github.com/bagustyo92/auth/modules/auth/models"
	gomock "github.com/golang/mock/gomock"
)

// MockAuthRepoInterface is a mock of AuthRepoInterface interface.
type MockAuthRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAuthRepoInterfaceMockRecorder
}

// MockAuthRepoInterfaceMockRecorder is the mock recorder for MockAuthRepoInterface.
type MockAuthRepoInterfaceMockRecorder struct {
	mock *MockAuthRepoInterface
}

// NewMockAuthRepoInterface creates a new mock instance.
func NewMockAuthRepoInterface(ctrl *gomock.Controller) *MockAuthRepoInterface {
	mock := &MockAuthRepoInterface{ctrl: ctrl}
	mock.recorder = &MockAuthRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthRepoInterface) EXPECT() *MockAuthRepoInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAuthRepoInterface) Create(auth models.Auth) (*models.Auth, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", auth)
	ret0, _ := ret[0].(*models.Auth)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockAuthRepoInterfaceMockRecorder) Create(auth interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAuthRepoInterface)(nil).Create), auth)
}

// GetByPhone mocks base method.
func (m *MockAuthRepoInterface) GetByPhone(phoneNumber string) (*models.Auth, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByPhone", phoneNumber)
	ret0, _ := ret[0].(*models.Auth)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByPhone indicates an expected call of GetByPhone.
func (mr *MockAuthRepoInterfaceMockRecorder) GetByPhone(phoneNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByPhone", reflect.TypeOf((*MockAuthRepoInterface)(nil).GetByPhone), phoneNumber)
}

// GetByUsername mocks base method.
func (m *MockAuthRepoInterface) GetByUsername(username string) (*models.Auth, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUsername", username)
	ret0, _ := ret[0].(*models.Auth)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUsername indicates an expected call of GetByUsername.
func (mr *MockAuthRepoInterfaceMockRecorder) GetByUsername(username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUsername", reflect.TypeOf((*MockAuthRepoInterface)(nil).GetByUsername), username)
}
