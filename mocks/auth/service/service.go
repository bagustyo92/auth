// Code generated by MockGen. DO NOT EDIT.
// Source: modules/auth/service/interface.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	models "github.com/bagustyo92/auth/modules/auth/models"
	gomock "github.com/golang/mock/gomock"
)

// MockAuthServiceInterface is a mock of AuthServiceInterface interface.
type MockAuthServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAuthServiceInterfaceMockRecorder
}

// MockAuthServiceInterfaceMockRecorder is the mock recorder for MockAuthServiceInterface.
type MockAuthServiceInterfaceMockRecorder struct {
	mock *MockAuthServiceInterface
}

// NewMockAuthServiceInterface creates a new mock instance.
func NewMockAuthServiceInterface(ctrl *gomock.Controller) *MockAuthServiceInterface {
	mock := &MockAuthServiceInterface{ctrl: ctrl}
	mock.recorder = &MockAuthServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthServiceInterface) EXPECT() *MockAuthServiceInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAuthServiceInterface) Create(auth models.Auth) (*models.Auth, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", auth)
	ret0, _ := ret[0].(*models.Auth)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockAuthServiceInterfaceMockRecorder) Create(auth interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAuthServiceInterface)(nil).Create), auth)
}

// GetByToken mocks base method.
func (m *MockAuthServiceInterface) GetByToken(tokenClaim models.JWTClaims) (*models.Auth, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByToken", tokenClaim)
	ret0, _ := ret[0].(*models.Auth)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByToken indicates an expected call of GetByToken.
func (mr *MockAuthServiceInterfaceMockRecorder) GetByToken(tokenClaim interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByToken", reflect.TypeOf((*MockAuthServiceInterface)(nil).GetByToken), tokenClaim)
}

// Login mocks base method.
func (m *MockAuthServiceInterface) Login(userLogin models.Auth) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", userLogin)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockAuthServiceInterfaceMockRecorder) Login(userLogin interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockAuthServiceInterface)(nil).Login), userLogin)
}
